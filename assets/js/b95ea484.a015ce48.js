"use strict";(self.webpackChunkfeature_probe_docs=self.webpackChunkfeature_probe_docs||[]).push([[3488],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(n),f=a,m=d["".concat(p,".").concat(f)]||d[f]||u[f]||o;return n?r.createElement(m,i(i({ref:t},s),{},{components:n})):r.createElement(m,i({ref:t},s))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7226:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:10},i="OpenAPI",l={unversionedId:"reference/api",id:"reference/api",title:"OpenAPI",description:"Authentication",source:"@site/docs/reference/api.md",sourceDirName:"reference",slug:"/reference/api",permalink:"/FeatureProbe/reference/api",draft:!1,editUrl:"https://github.com/FeatureProbe/FeatureProbe/blob/main/docs/docs/reference/api.md",tags:[],version:"current",lastUpdatedAt:1679370019,formattedLastUpdatedAt:"Mar 21, 2023",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"defaultSidebar",previous:{title:"Webhook Access",permalink:"/FeatureProbe/reference/webhook-access"},next:{title:"Explanation of Metric Types",permalink:"/FeatureProbe/reference/metric-explanation"}},p={},c=[{value:"Authentication",id:"authentication",level:3},{value:"Example",id:"example",level:3},{value:"OpenAPI Specification",id:"openapi-specification",level:3}],s={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"openapi"},"OpenAPI"),(0,a.kt)("h3",{id:"authentication"},"Authentication"),(0,a.kt)("p",null,"All REST API resource access is authenticated using ",(0,a.kt)("a",{parentName:"p",href:"/how-to/platform/token"},"Personal or Sharing Token"),", no other authentication mechanisms are supported. You can manage your ",(0,a.kt)("a",{parentName:"p",href:"/how-to/platform/token#personal-tokens"},"Personal Access Token")," on your account settings page."),(0,a.kt)("p",null,"After you create and obtain an Access Token on the platform, you can use this Token to access all REST APIs, and you need to add the following request header parameters when accessing:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"th"},"Header")),(0,a.kt)("th",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"th"},"Description")),(0,a.kt)("th",{parentName:"tr",align:null},"E.g"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Authorization"),(0,a.kt)("td",{parentName:"tr",align:null},"Personal or Application Access Token"),(0,a.kt)("td",{parentName:"tr",align:null},"-H 'Authorization: API_ACCESS_TOKEN'")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Content-Type"),(0,a.kt)("td",{parentName:"tr",align:null},"The protocol type of data sent, only JSON is supported"),(0,a.kt)("td",{parentName:"tr",align:null},"-H 'Content-Type: application/json'")))),(0,a.kt)("p",null,"Please use HTTPS for all calls to the API."),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("p",null,"For example, modify a toggle's crowd rules with the following request:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'curl -i \'https://featureprobe.io/api/projects/{PROJECT_KEY}/environments/{ENV_KEY}/toggles/{TOGGLE_KEY}/targeting\' \\\n  -X \'PATCH\' \\\n  -H \'Authorization: ${API_ACCESS_TOKEN}\' \\\n  -H \'Content-Type: application/json\' \\\n  --data-raw \'{\n    "comment":"test api change",\n    "disabled": false,\n    "content":{\n        "rules":[\n            {\n                "name":"city",\n                "serve":{\n                    "select":0\n                },\n                "conditions":[\n                    {\n                        "type":"number",\n                        "subject":"1",\n                        "predicate":">",\n                        "objects":[\n                            "1000",\n                            "1001"\n                        ]\n                    }\n                ]\n            }\n        ],\n        "disabledServe":{\n            "select":0\n        },\n        "defaultServe":{\n            "select":1\n        },\n        "variations":[\n            {\n                "value":"false",\n                "name":"variation1",\n                "description":""\n            },\n            {\n                "value":"true",\n                "name":"variation2",\n                "description":""\n            }\n        ]\n    }\n}\'\n')),(0,a.kt)("h3",{id:"openapi-specification"},"OpenAPI Specification"),(0,a.kt)("p",null,"We use the REST specification with OpenAPI, you can find our documentation here: ",(0,a.kt)("a",{parentName:"p",href:"https://featureprobe.io/api-docs"},"FeatureProbe OpenAPI"),"\u3002."))}u.isMDXComponent=!0}}]);