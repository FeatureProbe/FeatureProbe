"use strict";(self.webpackChunkfeature_probe_docs=self.webpackChunkfeature_probe_docs||[]).push([[6873],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>m});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),s=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),c=s(a),m=n,f=c["".concat(l,".").concat(m)]||c[m]||u[m]||o;return a?r.createElement(f,i(i({ref:t},d),{},{components:a})):r.createElement(f,i({ref:t},d))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=c;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:n,i[1]=p;for(var s=2;s<o;s++)i[s]=a[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},5071:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var r=a(7462),n=(a(7294),a(3905));const o={sidebar_position:2},i="Docker Deploy Guide",p={unversionedId:"how-to/deploy/deployment-docker-image",id:"how-to/deploy/deployment-docker-image",title:"Docker Deploy Guide",description:"Use the docker image provided by each module to independently deploy each sub-service on Linux/Unix/Mac",source:"@site/docs/how-to/deploy/deployment-docker-image.md",sourceDirName:"how-to/deploy",slug:"/how-to/deploy/deployment-docker-image",permalink:"/FeatureProbe/how-to/deploy/deployment-docker-image",draft:!1,editUrl:"https://github.com/FeatureProbe/FeatureProbe/blob/main/docs/docs/how-to/deploy/deployment-docker-image.md",tags:[],version:"current",lastUpdatedAt:1681286304,formattedLastUpdatedAt:"Apr 12, 2023",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"Docker Compose Deploy Guide",permalink:"/FeatureProbe/how-to/deploy/deployment-docker-compose"},next:{title:"All In One Deploy Guide",permalink:"/FeatureProbe/how-to/deploy/deployment-docker-all-in-one"}},l={},s=[{value:"Requirements",id:"requirements",level:2},{value:"Independent deployment of sub-services",id:"independent-deployment-of-sub-services",level:2},{value:"Steps",id:"steps",level:3},{value:"Deployment verification",id:"deployment-verification",level:2}],d={toc:s};function u(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"docker-deploy-guide"},"Docker Deploy Guide"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Use the docker image provided by each module to independently deploy each sub-service on Linux/Unix/Mac")),(0,n.kt)("h2",{id:"requirements"},"Requirements"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Docker 17+"),(0,n.kt)("li",{parentName:"ul"},"MySQL 5.7+"),(0,n.kt)("li",{parentName:"ul"},"Recommendation: Production environment with 3 nodes and above"),(0,n.kt)("li",{parentName:"ul"},"Recommendation: 2-core CPU/4G memory and above")),(0,n.kt)("h2",{id:"independent-deployment-of-sub-services"},"Independent deployment of sub-services"),(0,n.kt)("p",null,"Deploy independently on Linux/Unix/Mac using the ",(0,n.kt)("a",{parentName:"p",href:"https://hub.docker.com/u/featureprobe"},"docker image")," provided by each module."),(0,n.kt)("p",null,"Three service images need to be deployed, as shown in the following deployment example:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Sample machine"),(0,n.kt)("th",{parentName:"tr",align:null},"Deployment module"),(0,n.kt)("th",{parentName:"tr",align:null},"Port"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"10.100.1.1"),(0,n.kt)("td",{parentName:"tr",align:null},"FeatureProbe API"),(0,n.kt)("td",{parentName:"tr",align:null},"4008")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"10.100.1.1"),(0,n.kt)("td",{parentName:"tr",align:null},"FeatureProbe UI"),(0,n.kt)("td",{parentName:"tr",align:null},"4009\uff08Nginx\uff09")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"10.100.1.2"),(0,n.kt)("td",{parentName:"tr",align:null},"FeatureProbe Server"),(0,n.kt)("td",{parentName:"tr",align:null},"4007 4011")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"10.100.1.3"),(0,n.kt)("td",{parentName:"tr",align:null},"Database (MySQL)"),(0,n.kt)("td",{parentName:"tr",align:null},"13306")))),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"Please replace the above IP address with the actual IP address according to the actual deployment environment instead of 127.0.0.1 (Docker uses the bridge network mode by default and does not point to the host)")),(0,n.kt)("h3",{id:"steps"},"Steps"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Run the MySQL database instance:"),(0,n.kt)("admonition",{parentName:"li",type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"If you use other MySQL environments that you have already deployed (refer to ",(0,n.kt)("a",{parentName:"p",href:"/reference/database-setup"},"Setup database"),"), you can skip this step. Fill in your own MySQL environment configuration information in the startup parameters of the API service in the next step.")),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -p 13306:13306 \\\n    -e MYSQL_TCP_PORT=13306 \\\n    -e MYSQL_ROOT_PASSWORD=root \\\n    -e MYSQL_DATABASE=feature_probe \\\n    --name database -d mariadb\n")),(0,n.kt)("admonition",{parentName:"li",type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"   For more detailed configuration of database startup parameters, please refer to ",(0,n.kt)("a",{parentName:"p",href:"https://mariadb.com/kb/en/mariadb-docker-environment-variables/"},"Configure database"))))),(0,n.kt)("ol",{start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Run the FeatureProbe API instance:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -p 4008:4008 \\\n   -e server.port=4008 \\\n   -e spring.datasource.jdbc-url=jdbc:mysql://10.100.1.4:13306/feature_probe \\\n   -e spring.datasource.username=root \\\n   -e spring.datasource.password=root \\\n   -e app.analysis-url=http://10.100.1.1:4006\n   -e app.server-base-urls=http://10.100.1.1:4009\n   --name featureProbeAPI -d featureprobe/api\n   \n# The above 10.100.1.4:13306 is the IP and port of MySQL Server, please adjust it according to the actual situation\n# The above 10.100.1.4:4006 is the IP and port of Analysis Server, please adjust it according to the actual situation\n# The above 10.100.1.4:4009 is the IP and port of Server, please adjust it according to the actual situation\n")),(0,n.kt)("admonition",{parentName:"li",type:"info"},(0,n.kt)("p",{parentName:"admonition"},"For a more detailed description of the startup parameters of the API service, see ",(0,n.kt)("a",{parentName:"p",href:"../../reference/deployment-configuration#featureprobe-api"},"FeatureProbe API parameters"))))),(0,n.kt)("ol",{start:3},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Run the FeatureProbe Server instance:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -p 4007:4007 -p 4011:4011 \\\n  -e FP_SERVER_PORT=4007 \\\n  -e FP_REALTIME_PORT=4011 \\\n  -e FP_TOGGLES_URL=http://10.100.1.1:4008/internal/server/toggles \\\n  -e FP_EVENTS_URL=http://10.100.1.1:4008/internal/server/events \\\n  -e FP_KEYS_URL=http://10.100.1.1:4008/internal/server/sdk_keys \\\n  -e FP_ANALYSIS_URL=http://10.100.1.1:4006/events \\\n  --name featureProbeServer -d featureprobe/server\n  \n# The above 10.100.1.1:4008 is FeatureProbe API service IP and port, please adjust according to the actual situation\n# The above 10.100.1.1:4006 is FeatureProbe Analysis service IP and port, please adjust according to the actual situation\n")),(0,n.kt)("admonition",{parentName:"li",type:"info"},(0,n.kt)("p",{parentName:"admonition"},"For a more detailed description of the startup parameters of the Server service, see  ",(0,n.kt)("a",{parentName:"p",href:"../../reference/deployment-configuration#featureprobe-server"},"FeatureProbe Server parameters"))))),(0,n.kt)("p",null,"4\u3001Run the FeatureProbe Analysis instance:"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"The Analysis service database and the API database are separated. Before running Analysis, please create a database named 'feature_probe_events'. You can use the same database service as mentioned above.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"CREATE DATABASE IF NOT EXISTS feature_probe_events;\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -p 4006:4006 \\\n       -e server.port=4006 \\\n       -e app.datasource.jdbcUrl=jdbc:mysql://10.100.1.4:13306/feature_probe_events \\\n       -e app.datasource.username=root \\\n       -e app.datasource.password=fp@root \\\n       -e spring.profiles.active=online \\\n       -e JVM_ARGS='-Xmx2048m -Xms2048m' \\\n       -e TZ=Asia/Shanghai \\\n       --name featureProbeAnalysis -d featureprobe/analysis\n  \n# The above 10.100.1.4:13306 is the IP and port of MySQL Server, please adjust it according to the actual situation\n")),(0,n.kt)("ol",{start:5},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Run the FeatureProbe UI instance:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -p 4009:4009 \\\n-v /my_custom/default.conf:/etc/nginx/conf.d/default.conf \\\n--name featureProbeUI -d featureprobe/ui \n")),(0,n.kt)("p",{parentName:"li"},"In order to ensure that the API and UI ports are consistent (to avoid cross-domain requests), it is necessary to customize the nginx configuration to forward API requests. The configuration of ",(0,n.kt)("inlineCode",{parentName:"p"},"/my_custom/default.conf")," is as follows:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-nginx"},"upstream featureProbeAPI {\n   # IP and port of FeatureProbe API service, please adjust according to the actual situation\n   server 10.100.1.1:4008;\n}\n\nserver {\n   listen 4009;  # UI service port\n\n   location / {\n      index  index.html index.htm;\n      root /usr/share/nginx/html;\n      try_files $uri /index.html;\n   }\n\n   location /api { # Unified forwarding to featureProbe API service when accessing /api\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-NginX-Proxy true;\n      proxy_pass http://featureProbeAPI/api;\n      proxy_ssl_session_reuse off;\n      proxy_set_header Host $http_host;\n      proxy_cache_bypass $http_upgrade;\n      proxy_redirect off;\n   }\n}\n")))),(0,n.kt)("h2",{id:"deployment-verification"},"Deployment verification"),(0,n.kt)("p",null,"After the above services are started, open the browser, visit: ",(0,n.kt)("inlineCode",{parentName:"p"},"{FeatureProbeUI_IP}:4009")," and log in with the following default account to try it out:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"username: ",(0,n.kt)("inlineCode",{parentName:"li"},"admin")),(0,n.kt)("li",{parentName:"ul"},"password: ",(0,n.kt)("inlineCode",{parentName:"li"},"Pass1234"))))}u.isMDXComponent=!0}}]);