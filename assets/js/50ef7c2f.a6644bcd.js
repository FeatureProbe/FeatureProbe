"use strict";(self.webpackChunkfeature_probe_docs=self.webpackChunkfeature_probe_docs||[]).push([[4462],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),u=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(r),m=n,v=d["".concat(l,".").concat(m)]||d[m]||c[m]||o;return r?a.createElement(v,i(i({ref:t},p),{},{components:r})):a.createElement(v,i({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var u=2;u<o;u++)i[u]=r[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4824:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var a=r(7462),n=(r(7294),r(3905));const o={sidebar_position:1},i="Java SDK",s={unversionedId:"how-to/Server-Side SDKs/java-sdk",id:"how-to/Server-Side SDKs/java-sdk",title:"Java SDK",description:"FeatureProbe is an open source feature management service. This SDK is used to control features in java programs. This SDK is designed primarily for use in multi-user systems such as web servers and applications.",source:"@site/docs/how-to/Server-Side SDKs/java-sdk.md",sourceDirName:"how-to/Server-Side SDKs",slug:"/how-to/Server-Side SDKs/java-sdk",permalink:"/FeatureProbe/how-to/Server-Side SDKs/java-sdk",draft:!1,editUrl:"https://github.com/FeatureProbe/FeatureProbe/blob/main/docs/docs/how-to/Server-Side SDKs/java-sdk.md",tags:[],version:"current",lastUpdatedAt:1678090719,formattedLastUpdatedAt:"Mar 6, 2023",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"defaultSidebar",previous:{title:"Server-Side SDKs",permalink:"/FeatureProbe/category/server-side-sdks"},next:{title:"Spring Boot Starter",permalink:"/FeatureProbe/how-to/Server-Side SDKs/spring-boot-starter"}},l={},u=[{value:"Step-by-Step Guide",id:"step-by-step-guide",level:2},{value:"Step 1. Install the Java SDK",id:"step-1-install-the-java-sdk",level:3},{value:"Apache Maven",id:"apache-maven",level:4},{value:"Gradle Groovy DSL",id:"gradle-groovy-dsl",level:4},{value:"Step 2. Create a FeatureProbe instance",id:"step-2-create-a-featureprobe-instance",level:3},{value:"Step 3. Use the feature toggle",id:"step-3-use-the-feature-toggle",level:3},{value:"Step 4. Close FeatureProbe Client before program exits",id:"step-4-close-featureprobe-client-before-program-exits",level:3},{value:"Track Events",id:"track-events",level:2},{value:"Mock FeatureProbe for Unit test",id:"mock-featureprobe-for-unit-test",level:2},{value:"1. Add powermock SDK to your project:",id:"1-add-powermock-sdk-to-your-project",level:3},{value:"2. Mock Toggle",id:"2-mock-toggle",level:3},{value:"Target Method",id:"target-method",level:4},{value:"Unit Test Code",id:"unit-test-code",level:4},{value:"Customize SDK",id:"customize-sdk",level:2}],p={toc:u};function c(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"java-sdk"},"Java SDK"),(0,n.kt)("p",null,"FeatureProbe is an open source feature management service. This SDK is used to control features in java programs. This SDK is designed primarily for use in multi-user systems such as web servers and applications."),(0,n.kt)("admonition",{title:"SDK quick links",type:"note"},(0,n.kt)("p",{parentName:"admonition"},"In addition to this reference guide, we provide source code, API reference documentation, and sample applications at the following links:"),(0,n.kt)("table",{parentName:"admonition"},(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"Resource")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"Location")))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"SDK API documentation"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://featureprobe.github.io/server-sdk-java/"}," SDK API docs"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"GitHub repository"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://github.com/FeatureProbe/server-sdk-java"},"Server-SDK for Java"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Sample applications"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://github.com/FeatureProbe/server-sdk-java/blob/main/src/main/java/com/featureprobe/sdk/example/FeatureProbeDemo.java"},"FeatureProbeDemo")," (Java)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Published module"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://mvnrepository.com/artifact/com.featureprobe/server-sdk-java"},"Maven")))))),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"For users who are using FeatureProbe for the first time, we strongly recommend that you return to this article to continue reading after reading the ",(0,n.kt)("a",{parentName:"p",href:"../../tutorials/rollout_tutorial/"},"Gradual Rollout Tutorial"),".")),(0,n.kt)("h2",{id:"step-by-step-guide"},"Step-by-Step Guide"),(0,n.kt)("p",null,"Backend projects usually only need to instantiate a FeatureProbe SDK (Client)."),(0,n.kt)("p",null,"According to the requests of different users, call the FeatureProbe Client to obtain the toggle result for each user."),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"The server-side SDK uses an asynchronous connection to the FeatureProbe server to pull judgment rules, and the judgment rules will be cached locally. All interfaces exposed to user code only involve memory operations, so there is no need to worry about performance issues when calling.")),(0,n.kt)("h3",{id:"step-1-install-the-java-sdk"},"Step 1. Install the Java SDK"),(0,n.kt)("p",null,"First, install the FeatureProbe SDK as a dependency in your application."),(0,n.kt)("h4",{id:"apache-maven"},"Apache Maven"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>com.featureprobe</groupId>\n    <artifactId>server-sdk-java</artifactId>\n    <version>1.4.0</version>\n</dependency>\n")),(0,n.kt)("h4",{id:"gradle-groovy-dsl"},"Gradle Groovy DSL"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-text"},"implementation 'com.featureprobe:server-sdk-java:1.4.0'\n")),(0,n.kt)("h3",{id:"step-2-create-a-featureprobe-instance"},"Step 2. Create a FeatureProbe instance"),(0,n.kt)("p",null,"After you install and import the SDK, create a single, shared instance of the FeatureProbe sdk."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'public class Demo {\n    private static final FPConfig config = FPConfig.builder()\n        .remoteUri(/* FeatureProbe Server URI */)\n        .build();\n\n    private static final FeatureProbe fpClient = new FeatureProbe(\n        /* FeatureProbe Server SDK Key */, config);\n  \n    if\uff08!fpClient.initialized()) {\n                System.out.println("SDK failed to initialize!")\n        }\n}\n')),(0,n.kt)("h3",{id:"step-3-use-the-feature-toggle"},"Step 3. Use the feature toggle"),(0,n.kt)("p",null,"You can use sdk to check which variation a particular user will receive for a given feature flag."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'FPUser user = new FPUser();\n    user.with("ATTRIBUTE_NAME_IN_RULE", VALUE_OF_ATTRIBUTE);    // Call with() for each attribute used in Rule.\n    boolean boolValue = fpClient.boolValue("YOUR_TOGGLE_KEY", user, false);\n    if (boolValue) {\n    // the code to run if the toggle is on\n    } else {\n    // the code to run if the toggle is off\n    }\n')),(0,n.kt)("h3",{id:"step-4-close-featureprobe-client-before-program-exits"},"Step 4. Close FeatureProbe Client before program exits"),(0,n.kt)("p",null,"Close the client before exiting to ensure accurate data reporting."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"fpClient.close();\n")),(0,n.kt)("h2",{id:"track-events"},"Track Events"),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"The Java SDK supports event tracking from version 2.0.1.")),(0,n.kt)("p",null,"The event tracking feature can record the actions taken by the user in the application as events."),(0,n.kt)("p",null,"Events are related to toggle's metrics. For more information about event analysis, please read ",(0,n.kt)("a",{parentName:"p",href:"../../tutorials/analysis"},"Event Analysis"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'fpClient.track("YOUR_CUSTOM_EVENT_NAME", user);\n// Providing a metric value to track\nfpClient.track("YOUR_CUSTOM_EVENT_NAME", user, 5.5);\n')),(0,n.kt)("h2",{id:"mock-featureprobe-for-unit-test"},"Mock FeatureProbe for Unit test"),(0,n.kt)("p",null,"You can mock FeatureProbe SDK returned value, to run unit test of your code."),(0,n.kt)("h3",{id:"1-add-powermock-sdk-to-your-project"},"1. Add powermock SDK to your project:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>org.powermock</groupId>\n    <artifactId>powermock-api-mockito2</artifactId>\n    <version>2.0.9</version>\n    <scope>test</scope>\n</dependency>\n<dependency>\n    <groupId>org.powermock</groupId>\n    <artifactId>powermock-module-junit4</artifactId>\n    <version>2.0.9</version>\n    <scope>test</scope>\n</dependency>\n")),(0,n.kt)("h3",{id:"2-mock-toggle"},"2. Mock Toggle"),(0,n.kt)("h4",{id:"target-method"},"Target Method"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'@AllArgsConstructor\n@Service\npublic class DemoService {\n\n    FeatureProbe fp;\n\n    public boolean isTester(String userId, String tel) {\n        FPUser fpUser = new FPUser(userId);\n        fpUser.with("tel", tel);\n        return fp.boolValue("is_tester", fpUser, false);\n    }\n}\n')),(0,n.kt)("h4",{id:"unit-test-code"},"Unit Test Code"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'@RunWith(PowerMockRunner.class)\n@PrepareForTest({FeatureProbe.class})\npublic class FeatureProbeTest {\n\n    @Test\n    public void test() {\n        FeatureProbe fp = PowerMockito.mock(FeatureProbe.class);\n        DemoService demoService = new DemoService(fp);\n        Mockito.when(fp.boolValue(anyString(), any(FPUser.class), anyBoolean())).thenReturn(true);\n        boolean tester = demoService.isTester("user123", "12397347232");\n        assert tester;\n    }\n\n}\n')),(0,n.kt)("h2",{id:"customize-sdk"},"Customize SDK"),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"This paragraph applies to users who want to customize this SDK, or contribute code to this SDK through the open source community. Other users can skip this section.")),(0,n.kt)("p",null,"We provide an acceptance test of this SDK to ensure that the modified SDK is compatible with the native rules of FeatureProbe.\nIntegration test cases are added as submodules of each SDK repository. So be sure to pull the submodule first to get the latest integration tests before running the tests."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"git submodule update --init --recursive\nmvn test\n")))}c.isMDXComponent=!0}}]);