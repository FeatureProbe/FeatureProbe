name: Publish Docker Image

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker image tag'
        required: true
        default: 'alpha'
        type: string
      build_select:
        description: 'Submodule to release'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - api
        - ui
        - server
        - analysis

permissions:
  contents: read
  
jobs:
  release_api:
    name: Release API
    if: ${{ github.event_name == 'release' || (inputs.build_select == 'api' || inputs.build_select == 'all') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'maven'
          
      - name: Build with Maven
        run: mvn -B package --file ./api/pom.xml
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.2.1
            
      - name: Login to DockerHub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Docker Build API (by release)
        if: ${{ github.event_name == 'release' }}
        run: |
          docker buildx build \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --platform linux/amd64,linux/arm64 \
            --output "type=image,push=true" \
            --tag featureprobe/api:${GITHUB_REF#refs/tags/} \
            --tag featureprobe/api:latest \
            --file ./Dockerfile ./
        working-directory: ./api
    
      - name: Docker Build API (manual)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          docker buildx build \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --platform linux/amd64,linux/arm64 \
            --output "type=image,push=true" \
            --tag featureprobe/api:$DOCKER_TAG \
            --tag featureprobe/api:latest \
            --file ./Dockerfile ./
        env:
          DOCKER_TAG: ${{ inputs.tag }}
        working-directory: ./api
      - name: Inspect image
        run: |
          docker buildx imagetools inspect featureprobe/api
        working-directory: ./api

  release_analysis:
    name: Release Analysis
    if: ${{ github.event_name == 'release' || (inputs.build_select == 'analysis' || inputs.build_select == 'all') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: mvn -B package --file ./api/analysis/pom.xml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.2.1

      - name: Login to DockerHub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build API (by release)
        if: ${{ github.event_name == 'release' }}
        run: |
          docker buildx build \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --platform linux/amd64,linux/arm64 \
            --output "type=image,push=true" \
            --tag featureprobe/analysis:${GITHUB_REF#refs/tags/} \
            --tag featureprobe/analysis:latest \
            --file ./Dockerfile ./
        working-directory: ./api/analysis

      - name: Docker Build Analysis (manual)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          docker buildx build \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --platform linux/amd64,linux/arm64 \
            --output "type=image,push=true" \
            --tag featureprobe/analysis:$DOCKER_TAG \
            --tag featureprobe/analysis:latest \
            --file ./Dockerfile ./
        env:
          DOCKER_TAG: ${{ inputs.tag }}
        working-directory: ./api/analysis
      - name: Inspect image
        run: |
          docker buildx imagetools inspect featureprobe/analysis
        working-directory: ./api/analysis
  
  release_ui:
    name: Release UI
    if: ${{ github.event_name == 'release' || (inputs.build_select == 'ui' || inputs.build_select == 'all') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn
          cache-dependency-path: ui/yarn.lock
      
      - name: yarn install
        run: yarn install --frozen-lockfile
        working-directory: ./ui
      
      - name: yarn build
        run: yarn build
        working-directory: ./ui

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.2.1
            
      - name: Login to DockerHub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: clean node env
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          docker buildx create --driver docker-container --use
          docker buildx inspect --bootstrap
          
      - name: Docker Build UI (by release)
        if: ${{ github.event_name == 'release' }}
        run: |
          docker buildx build \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --platform linux/amd64,linux/arm64 \
            --output "type=image,push=true" \
            --tag featureprobe/ui:latest \
            --tag featureprobe/ui:${GITHUB_REF#refs/tags/} \
            --file ./Dockerfile ./
        working-directory: ./ui    
  
      - name: Docker Build UI (manually)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          docker buildx build \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --platform linux/amd64,linux/arm64 \
            --output "type=image,push=true" \
            --tag featureprobe/ui:latest \
            --tag featureprobe/ui:$DOCKER_TAG \
            --file ./Dockerfile ./
        env:
          DOCKER_TAG: ${{ inputs.tag }}
        working-directory: ./ui    
        
      - name: Inspect image
        run: |
          docker buildx imagetools inspect featureprobe/ui
        working-directory: ./ui  

  release_server:
    name: Release Server
    if: ${{ github.event_name == 'release' || (inputs.build_select == 'server' || inputs.build_select == 'all') }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Install nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      
      - name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v3

      -
        name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
 
      -
        name: Docker Buildx (by release)
        if: ${{ github.event_name == 'release' }}
        run: |
          docker buildx build \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --platform linux/amd64 \
            --output "type=image,push=true" \
            --tag featureprobe/server:latest \
            --tag featureprobe/server:${GITHUB_REF#refs/tags/} \
            --file server/Dockerfile .
      -
        name: Docker Buildx (workflow_dispatch)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          docker buildx build \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --platform linux/amd64 \
            --output "type=image,push=true" \
            --tag featureprobe/server:latest \
            --tag featureprobe/server:$DOCKER_TAG \
            --file server/Dockerfile .
        env:
          DOCKER_TAG: ${{ inputs.tag }}

      -
        name: Inspect image
        run: |
          docker buildx imagetools inspect featureprobe/server
        working-directory: ./server


  deployment:
    name: Deploy to Google Cloud
    uses: FeatureProbe/FeatureProbe/.github/workflows/gcloud.yml@main
    secrets: inherit # pass all secrets
    needs: [release_api, release_ui, release_server, release_analysis]
    permissions:
      id-token: write
      contents: read
